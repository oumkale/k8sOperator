
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: podtatoheads.crd.demo.com
spec:
  group: crd.demo.com
  names:
    kind: PodTatoHead
    listKind: PodTatoHeadList
    plural: podtatoheads
    singular: podtatohead
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PodTatoHead is the Schema for the PodTatoHeads API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PodTatoHeadSpec defines the desired state of PodTatoHead
            properties:
              env:
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              hats:
                description: HatsInfo defines the observed state of WaitForDb
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  port:
                    format: int32
                    type: integer
                  serviceType:
                    type: string
                type: object
              leftArm:
                description: LeftArmInfo defines the observed state of WaitForDb
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  port:
                    format: int32
                    type: integer
                  serviceType:
                    type: string
                type: object
              leftLeg:
                description: LeftLegInfo defines the observed state of WaitForDb
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  port:
                    format: int32
                    type: integer
                  serviceType:
                    type: string
                type: object
              main:
                description: MainInfo defines the observed state of CopySystemYaml
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  port:
                    format: int32
                    type: integer
                  serviceType:
                    type: string
                type: object
              name:
                type: string
              namespace:
                type: string
              port:
                type: integer
              replicaCount:
                format: int32
                type: integer
              rightArm:
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  port:
                    format: int32
                    type: integer
                  serviceType:
                    type: string
                type: object
              rightLeg:
                description: RightLegInfo defines the observed state of Marshaller
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  port:
                    format: int32
                    type: integer
                  serviceType:
                    type: string
                type: object
              version:
                type: string
            type: object
          status:
            description: PodTatoHeadStatus defines the observed state of PodTatoHead
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
---
apiVersion: v1
kind: Namespace
metadata:
  name: operator
  labels:
    control-plane: operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operator
  namespace: operator
  labels:
    control-plane: operator
spec:
  selector:
    matchLabels:
      control-plane: operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: operator
    spec:
      securityContext:
        runAsNonRoot: false

      containers:
      - command:
        - ./operator
        args:
        - --leader-elect
        image: kaleoum/operator:gitops
        name: manager
        env:
        - name: "URL"
          value: "http://demo-app.operator:9090/version"
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: operator
      terminationGracePeriodSeconds: 10
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: operator
rules:
- apiGroups:
  - crd.demo.com
  resources:
  - podtatoheads
  - podtatoheads/finalizers
  - podtatoheads/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

- apiGroups:
  - crd.demo.com
  resources:
  - leases
  verbs:
  - get
  - patch
  - update
  - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - patch
  - update
  - create
  - delete
- apiGroups: ["", "apps"]
  resources: ["statefulsets", "events", "serviceaccounts", "deployments", "configmaps", "services", "secrets", "persistentvolumeclaims", "pods", "pods/log"]
  verbs: ["get", "watch", "list", "create", "delete", "update"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: operator
  namespace: operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: operator
---
apiVersion: crd.demo.com/v1alpha1
kind: PodTatoHead
metadata:
  name: podtatohead
  namespace: operator
spec:
  replicaCount: 1
  name: pod-tato-head
  namespace: operator
  version: v0.1.1
  env:
    - name: PORT
      value: "9000"
  main:
    name: main
    port: 9000

  hats:
    image: kaleoum/podtato-hats:v0.1.1
    name: hats
    port: 9001
    env:

  leftLeg:
    image: kaleoum/podtato-left-leg:v0.1.1
    name: left-leg
    port: 9002

  leftArm:
    image: kaleoum/podtato-left-arm:v0.1.1
    name: left-arm
    port: 9003

  rightLeg:
    image: kaleoum/podtato-right-leg:v0.1.1
    name: right-leg
    port: 9004

  rightArm:
    image: kaleoum/podtato-right-arm:v0.1.1
    name: right-arm
    port: 9005

---